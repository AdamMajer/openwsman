dnl *******************************************
dnl *** Initialize automake and set version ***
dnl *******************************************

AC_PREREQ(2.53)
AC_INIT(openwsman, 0.09)
AC_CONFIG_SRCDIR(src/server/wsmand.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE
AC_PROG_MAKE_SET


dnl ***************************
dnl *** Set debugging flags ***
dnl ***************************

debug_default=minimum

# Declare --enable-* args and collect ac_help strings
AC_ARG_ENABLE(debug, 
	      [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,
	      enable_debug=$debug_default)

# Set the debug flags
if test "x$enable_debug" = "xyes"; then
	test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
	OWSMAN_DEBUG_FLAGS="-DOWSMAN_ENABLE_DEBUG"
else
	if test "x$enable_debug" = "xno"; then
		OWSMAN_DEBUG_FLAGS="-DG_DISABLE_ASSERT -DG_DISABLE_CHECKS"
	fi
fi
# Set the debug flags
if test "x$enable_debug" = "xyes"; then
    AC_DEFINE(WSMAN_DEBUG_VERBOSE, 1, [Defined if verbose debug logging is requested])
fi
AC_SUBST(OWSMAN_DEBUG_FLAGS)

PKG_CHECK_MODULES(GMODULE, gmodule-2.0)
PKG_CHECK_MODULES(GLIB, glib-2.0)
PKG_CHECK_MODULES(SOUP, libsoup-2.2)
dnl PKG_CHECK_MODULES(LIBXSLT, libxslt)


dnl ***************************
dnl *** Checks for programs ***
dnl ***************************

AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_INSTALL

# Set STDC_HEADERS
AC_HEADER_STDC

# Initialize libtool
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

# This isn't a program, but it doesn't fit anywhere else...
AC_FUNC_ALLOCA

dnl xbp_default=no
dnl AC_ARG_ENABLE(xbp, 
dnl 	      [  --enable-xbp=[no/yes] Enable base XML parser (XBP) [default=no]],,
dnl	      enable_xbp=$xbp_default)

# Set the debug flags
if test "x$enable_xbp" = "xyes"; then
    AC_DEFINE(WS_USE_XBP, 1, [Defined if you have XBP support])
else
    PKG_CHECK_MODULES(XML, libxml-2.0)
    AC_DEFINE(WS_USE_LIBXML2, 1, [Defined if you have XML2  support])
fi
AC_ARG_ENABLE(doxygen-docs,     [  --enable-doxygen-docs     build DOXYGEN documentation (requires Doxygen)],enable_doxygen_docs=$enableval,enable_doxygen_docs=auto)

dnl ***********************
dnl *** Check for Win32 ***
dnl ***********************

AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)
    os_win32=yes
    AC_CACHE_VAL(ac_cv_func_getaddrinfo, [ac_cv_func_getaddrinfo=yes])
    AC_CACHE_VAL(ac_cv_func_getnameinfo, [ac_cv_func_getnameinfo=yes])
    AC_CACHE_VAL(ac_cv_func_inet_pton, [ac_cv_func_inet_pton=yes])
    AC_CACHE_VAL(ac_cv_func_inet_ntop, [ac_cv_func_inet_ntop=yes])
    AC_CACHE_VAL(soup_cv_ipv6, [soup_cv_ipv6=yes])
    ;;
  *)
    os_win32=no
    ;;
esac
AC_MSG_RESULT([$os_win32])
AM_CONDITIONAL(OS_WIN32, [test $os_win32 = yes])

dnl *******************
dnl *** Misc checks ***
dnl *******************
AC_CHECK_FUNCS(gmtime_r)

dnl *********************************
dnl *** Networking library checks ***
dnl *********************************

AC_CHECK_FUNC(socket, , AC_CHECK_LIB(socket, socket))
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, gethostbyname))
AC_CHECK_FUNCS(inet_pton inet_ntop inet_aton getaddrinfo getnameinfo)
AC_CACHE_CHECK(IPv6 support, soup_cv_ipv6, [
	AC_EGREP_HEADER(sockaddr_in6, netinet/in.h, soup_cv_ipv6=yes, soup_cv_ipv6=no)
])


AC_ARG_ENABLE(ssl, 
              [  --enable-ssl             Turn on Secure Sockets Layer support [default=yes]],,
              enable_ssl=auto)

if test "$enable_ssl" != "no"; then
    AM_PATH_LIBGNUTLS(1.0.0, have_ssl=yes, have_ssl=no)

    if test "$have_ssl" != "yes"; then
        if test "$enable_ssl" = "auto"; then
            AC_MSG_WARN(Disabling SSL support);
            enable_ssl=no;
        else
            AC_MSG_ERROR(Could not configure SSL support);
        fi
    fi
fi

if test "$enable_ssl" != "no"; then
    AC_DEFINE(HAVE_SSL, 1, [Defined if you have SSL support])
fi

dnl Subst PACKAGE_PLUGIN_DIR.
packageplugindir=$libdir/${PACKAGE}/plugins
PACKAGE_PLUGIN_DIR="${packageplugindir}"
AC_SUBST(PACKAGE_PLUGIN_DIR)

dnl *************************************
dnl *** Warnings to show if using GCC ***
dnl *************************************

AC_ARG_ENABLE(more-warnings,
	      [  --disable-more-warnings  Inhibit compiler warnings],
	      set_more_warnings=no)

if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	CFLAGS="$CFLAGS \
		-Wall -Wstrict-prototypes -Wmissing-declarations \
		-Wmissing-prototypes -Wnested-externs -Wpointer-arith \
                -Wunused"
fi

AC_ARG_ENABLE(warnings-as-errors,
	      [  --enable-warnings-as-errors  Make compiler warnings into errors],
	      warnings_as_errors=yes)

if test "$GCC" = "yes" -a "$warnings_as_errors" = "yes"; then
	CFLAGS="$CFLAGS -Werror"
fi

if test "$os_win32" != yes; then
	# Use reentrant functions (FIXME!)
	CFLAGS="$CFLAGS -D_REENTRANT"
fi


CHECK_SFCC
have_sfcc=no
disable_cim_plugins=no
compile_cim=no
ENABLED_PLUGINS="wsman "

AC_ARG_ENABLE(cim-plugins,
	      [  --disable-cim-plugins  Disable CIM Plugins],
	      disable_cim_plugins=yes)
AC_ARG_ENABLE(old-cim-plugins,
	      [  --enable-old-cim-plugins  Enable old CIM Plugins],
	      [enable_old_cim_plugins=yes], [enable_old_cim_plugins=no])

AC_CHECK_LIB([cmpisfcc],  [cmciConnect], [have_sfcc=yes])

if test "$disable_cim_plugins" != "yes"; then
    if test "$have_sfcc" == "yes"; then
        ENABLED_PLUGINS="$ENABLED_PLUGINS cim"
        compile_cim=yes
    fi
fi
AM_CONDITIONAL(compile_LIBCIM, test "$compile_cim" == "yes")
AM_CONDITIONAL(compile_OLDCIMPLUGIN, test x$enable_old_cim_plugins == xyes)

AC_PATH_PROG(DOXYGEN, doxygen, no)

AC_MSG_CHECKING([whether to build Doxygen documentation])

if test x$DOXYGEN = xno ; then
    have_doxygen=no
else
    have_doxygen=yes
fi

if test x$enable_doxygen_docs = xauto ; then
    if test x$have_doxygen = xno ; then
        enable_doxygen_docs=no
    else
        enable_doxygen_docs=yes
    fi
fi

if test x$enable_doxygen_docs = xyes; then
    if test x$have_doxygen = xno; then
    AC_MSG_ERROR([Building Doxygen docs explicitly required, but Doxygen not found])
    fi
fi

AM_CONDITIONAL(OWSMAN_DOXYGEN_DOCS_ENABLED, test x$enable_doxygen_docs = xyes)
AC_MSG_RESULT(yes)


###
### static?
###
#AC_ARG_ENABLE(static-binary,
#  [  --enable-static-binary  link as many libraries statically as possible])

##if test "$enable_static_binary" = "yes"; then
## LINK_BEGIN="-Wl,-Bstatic"
##  LINK_END="-Wl,-Bdynamic"
##else
##  LINK_BEGIN=
##  LINK_END=
##fi
##AC_SUBST(LINK_BEGIN)
##AC_SUBST(LINK_END)
##AC_SUBST(SHARED_ONLY)
AC_SUBST(ENABLED_PLUGINS)

dnl *************************
dnl *** Output Everything ***
dnl *************************

AC_OUTPUT([
        Doxyfile
	Makefile
        src/Makefile
        src/server/Makefile
        src/client/Makefile
        src/lib/Makefile
        src/libcim/Makefile
        src/libcim/sfcc/Makefile
        src/plugins/Makefile
        src/plugins/cim/Makefile
        src/plugins/wsman/Makefile
        src/plugins/wsman/this/Makefile
        src/plugins/wsman/test/Makefile
        src/plugins/wsman/test2/Makefile
        src/plugins/ComputerSystem/Makefile
        doc/Makefile
        doc/specs/Makefile
	])
